
# UTF-8 인코딩
## 스프링 부트 기본 인코딩은 ISO-8859-1 이다(ASCII 문자만 처리가능)
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

# h2 database 준비
## h2 database 는 개발용으로 사용되는 소규모 데이터베이스 엔진. 로컬 테스트 개발시 주로 사용
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

## 데이터베이스 접속 정보
### ~ : 홈디렉토리(\User\계정명) 아래의 bookHub.mv.db 파일이 h2 데이터페이스 파일
spring.datasource.url=jdbc:h2:~/bookhub
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=1234

# JPA 설정정보
## ORM 이 어떤 데이터 베이스엔진을 기준으로 쿼리를 생성할 것인지 결정. H2 DB 이므로 H2Dialect 사용
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
## sql 읽기 쉽도록 포맷팅
spring.jpa.properties.hibernate.format_sql=true
## 콘솔에 SQL 구문 보여줄지 여부
spring.jpa.properties.hibernate.show_sql=true
## entity 클래스에 맞춰서 테이블 자동생성. ex) 값이 create 이면 테이블 삭제 후 생성, update 이면 테이블 없을때만 생성
spring.jpa.hibernate.ddl-auto=update
## -----------------------
#  JPA 테이블 및 컬럼명 생성 전략
#   기본 전략은 물리적 모델링(SpringPhysicalNamingStrategy) : 카멜케이스가 아닌 언더스코어케이스로 만들어진다 (ex. bookId > book_id)
#   논리 모델링(SpringImplicitNamingStrategy) 을 사용하고자 하면 하위 설정을 등록한다
## -----------------------
#spring.jpa.hibernate.naming.implicit-strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy